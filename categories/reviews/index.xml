<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Reviews on Serhii Vasylenko</title>
    <link>https://serhii.vasylenko.info/categories/reviews/</link>
    <description>Recent content in Reviews on Serhii Vasylenko</description>
    <image>
      <url>https://serhii.vasylenko.info/assets/img/website-logo-open-graph.jpeg</url>
      <link>https://serhii.vasylenko.info/assets/img/website-logo-open-graph.jpeg</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 19 Jan 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://serhii.vasylenko.info/categories/reviews/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>mac1.metal EC2 Instance â€” user experience</title>
      <link>https://serhii.vasylenko.info/2021/01/19/mac1-metal-EC2-Instance-user-experience.html</link>
      <pubDate>Tue, 19 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://serhii.vasylenko.info/2021/01/19/mac1-metal-EC2-Instance-user-experience.html</guid>
      <description>An overview of one-month user experience with the new mac1.metal EC2 Instances from AWS</description>
      <content:encoded><![CDATA[<h2 id="amazon-ec2-mac-instances">Amazon EC2 Mac Instances</h2>
<p>Something cool and powerful with inevitable trade-offs. As everything in this world.</p>
<p>AWS announced EC2 macOS-based instances on the 30th of November 2020, and after more than a month of tests, I would like to share some findings and impressions about it.</p>
<p>First of all, the things you can easily find, but it&rsquo;s still worth to say:</p>
<ul>
<li>The new instance family is called <code>mac1.metal</code>. Guess we should expect mac2 or mac3; otherwise, why did they put a number in the name?</li>
<li>They added <a href="https://aws.amazon.com/ec2/nitro/">AWS Nitro System</a> to integrate them with many AWS services.</li>
<li>The Instance must be placed onto a <a href="https://aws.amazon.com/ec2/dedicated-hosts/">Dedicated Host</a>. Only one Instance per Host is allowed because the Host is an actual Mac Mini in that case.</li>
<li>You don&rsquo;t pay anything for the Instance itself, but you pay for the Dedicated Host leasing â€” $1.083, and the minimum lease time is 24 hours. So the launch of the &ldquo;mac1.metal&rdquo; Instance costs $26 at minimum. Prices provided for the cheapest region â€” North Virginia.</li>
<li>You can apply <a href="https://docs.aws.amazon.com/savingsplans/latest/userguide/what-is-savings-plans.html">Saving Plans</a> to save some money.</li>
<li>Mojave (10.14) and Catalina (10.15) are supported at the moment, with <a href="https://aws.amazon.com/ec2/instance-types/mac/">&ldquo;support for macOS Big Sur (11.0) coming soon&rdquo;</a>. I expect it to be in 2021, though.</li>
</ul>
<h2 id="what-can-it-do">What can it do</h2>
<p>Here is a list of some features that the &ldquo;mac1.metal&rdquo; instance has:</p>
<ul>
<li>It lives in your VPC because it is an EC2 Instance so that you can access many other services.</li>
<li>It supports the new gp3 EBS type (and other types as well).</li>
<li>It supports SSM Agent and Session Manager.</li>
<li>It has several AWS tools pre-installed.</li>
<li>It has pre-installed Enhanced Network Interface drivers. My test upload/download to S3 was about 300GB/s.</li>
<li>It can report CPU metrics to CloudWatch (if you ever need it, though).</li>
</ul>
<h2 id="what-cant-it-do">What can&rsquo;t it do</h2>
<ul>
<li>It can&rsquo;t be used in Auto Scaling because of a Dedicated Host.</li>
<li>It can&rsquo;t recognize the attached EBS if you connected it while the Instance was running â€” you must reboot the Instance to make it visible.</li>
<li>It does not support several services that rely on additional custom software, such as &ldquo;EC2 Instance Connect&rdquo; and &ldquo;AWS Inspect.&rdquo; But I think that AWS will add macOS distros for those soon.</li>
</ul>
<h2 id="launching-the-instance">Launching the Instance</h2>
<p>Jeff Bar <a href="https://aws.amazon.com/blogs/aws/new-use-mac-instances-to-build-test-macos-ios-ipados-tvos-and-watchos-apps/">published</a> an excellent how-to about kickstart of the &ldquo;mac1.metal&rdquo;, so I will focus on things he did not mention.</p>
<p>Once you allocated the Dedicated Host and launched an Instance on it, the underlying system connects the EBS with a root file system to the Mac Mini.</p>
<p>It is an AMI with 32G EBS (as per Jan'21) with macOS pre-installed.</p>
<p>That means two things:</p>
<ul>
<li>The built-it physical SSD is still there and still yours to use; however, AWS does not manage or support the Apple hardware&rsquo;s internal SSD.</li>
<li>You must resize the disk manually (if you specified the EBS size to be more than 32G)[1].</li>
</ul>
<p>The time from the Instance launch till you&rsquo;re able to SSH into it varies between 15 and 20 minutes.</p>
<p>You have the option to access it over SSH with your private key. If you need to set up Screen Sharing, you have to allow it through the &ldquo;kickstart&rdquo; command-line utility and setting the user password [2].</p>
<h2 id="destroying-the-instance">Destroying the Instance</h2>
<p>What an easy thing to do, right? Well, it depends.</p>
<p>When you click on the &ldquo;Terminate&rdquo; item in the Instance actions menu, the complex Instance scrubbing process begins.</p>
<p>AWS wants to make sure that anyone who uses the Host (Mac mini) after you will get your data stored neither on disks (including physical SSD mentioned earlier), nor inside memory or NVRAM, nor anywhere else. They do not share the info about this scrubbing process&rsquo;s details, but it takes more than an hour to complete.</p>
<p>When scrubbing is started, the Dedicated Host transitions to the Pending state. Dedicated Host transitions to Available state once scrubbing is finished. But you must wait for another 10-15 minutes to be able to release it finally.</p>
<p>I don&rsquo;t know why they set the Available state value earlier than the Host is available for operations, but this is how it works now (Jan'21).</p>
<p>Therefore, you can launch the next Instance on the same Host not earlier than ~1,5 hours after you terminated the previous. That doesn&rsquo;t seem very pleasant in the first couple of weeks, but you will get used to it. ðŸ˜„</p>
<p>And again: you can release the &ldquo;mac1.metal&rdquo; Dedicated Host not earlier than 24 hours after it was allocated. So plan your tests wisely.</p>
<h2 id="legal-things">Legal things</h2>
<p>I could not find it on a documentation page, but A Cloud Guru folks <a href="https://acloudguru.com/blog/engineering/what-you-need-to-know-about-awss-new-ec2-mac-instances">say</a> that you must use new Instances solely for developer services, and you must agree to all of the EULAs.</p>
<p>Sounds reasonable to me, but that could be written somewhere in the docs still, at least. Please let me know if you found it there.</p>
<h2 id="some-more-cool-stuff-to-check">Some more cool stuff to check:</h2>
<p><a href="https://github.com/aws/ec2-macos-init">EC2 macOS Init</a> launch daemon, which is used to initialize Mac instances.
<a href="https://github.com/aws/homebrew-aws">EC2 macOS Homebrew Tap</a> (Third-Party Repository) with several management tools which come pre-installed into macOS AMI from AWS.</p>
<hr>
<p>Indeed it is powerful, and it has its trade-offs, such as price and some technical constraints. But it is a real MacOS device natively integrated into the AWS environment. So I guess it worth to be tried!</p>
<p>Thanks for reading this! Stay tuned for more user experience feedback about baking custom AMI&rsquo;s, automated software provisioning with Ansible, and other adventures with mac1.metal!</p>
<hr>
<p><strong>[1] How to resize the EBS at mac1.metal in Terminal</strong></p>
<p>Get the identifier of EBS (look for the first one with GUID_partition_scheme):</p>
<p><code>diskutil list physical external</code></p>
<p>Or here is a more advanced version to be used in a script:</p>
<div class="highlight"><div style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell"><span style="color:#40ffff">DISK_ID</span>=<span style="color:#6ab825;font-weight:bold">$(</span>diskutil list physical external | grep <span style="color:#ed9d13">&#39;GUID_partition_scheme&#39;</span>| tr -s <span style="color:#ed9d13">&#39; &#39;</span> | cut -d<span style="color:#ed9d13">&#39; &#39;</span> -f6<span style="color:#6ab825;font-weight:bold">)</span>
</code></pre></td></tr></table>
</div>
</div><p>It would probably be <code>disk0</code> if you did not attach additional EBS.</p>
<p>Then run the repair job for the disk, using its identifier:
<code>diskutil repairDisk disk0</code></p>
<p>Advanced version:</p>
<div class="highlight"><div style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">yes | diskutil repairDisk <span style="color:#40ffff">$DISK_ID</span>
</code></pre></td></tr></table>
</div>
</div><p>Now get the APFS container identifier (look for Apple_APFS):
<code>diskutil list physical external</code></p>
<p>Advanced version:</p>
<div class="highlight"><div style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell"><span style="color:#40ffff">APFS_ID</span>=<span style="color:#6ab825;font-weight:bold">$(</span>diskutil list physical external | grep <span style="color:#ed9d13">&#39;Apple_APFS&#39;</span> | tr -s <span style="color:#ed9d13">&#39; &#39;</span> | cut -d<span style="color:#ed9d13">&#39; &#39;</span> -f8<span style="color:#6ab825;font-weight:bold">)</span>
</code></pre></td></tr></table>
</div>
</div><p>It would probably be <code>disk0s2</code> if you did not attach additional EBS.</p>
<p>Finally, resize the APFS container:
<code>diskutil apfs resizeContainer disk0s2</code></p>
<p>Advanced version</p>
<div class="highlight"><div style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">diskutil apfs resizeContainer <span style="color:#40ffff">$APFS_ID</span>
</code></pre></td></tr></table>
</div>
</div><p><strong>[2]How to setup Screen Sharing at mac1.metal in Terminal</strong></p>
<p>The <code>kickstart</code> command-line tool resides in <code>/System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/</code> so you&rsquo;ll better to cd into that directory for convenience:</p>
<div class="highlight"><div style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">8
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell"><span style="color:#999;font-style:italic"># Turn On Remote Management for a user to be specified later</span>
sudo ./kickstart -activate -configure -allowAccessFor -specifiedUsers

<span style="color:#999;font-style:italic"># Enable Remote Management for ec2-user user</span>
sudo ./kickstart -configure -users ec2-user -access -on -privs -all

<span style="color:#999;font-style:italic"># Set the user password </span>
sudo passwd ec2-user
</code></pre></td></tr></table>
</div>
</div>]]></content:encoded>
    </item>
    
    <item>
      <title>AWS CloudShell</title>
      <link>https://serhii.vasylenko.info/2020/12/16/aws-cloudshell.html</link>
      <pubDate>Wed, 16 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://serhii.vasylenko.info/2020/12/16/aws-cloudshell.html</guid>
      <description>Native and official way to run AWS CLI in a browser</description>
      <content:encoded><![CDATA[<p>A simple but cool announcement from AWS â€” <a href="https://aws.amazon.com/cloudshell/">AWS CloudShell</a>.
A tool for ad-hoc AWS management via CLI directly in your browser.</p>
<p>I like when AWS releases something simple to understand and yet powerful.<br>
So it is not another <a href="https://aws.amazon.com/devops-guru/">DevOps Guru</a>, believe me :)</p>
<ul>
<li>Yes, this is similar to the shells that GCE and Azure have.</li>
<li>No, you canâ€™t access your instances from it, so itâ€™s not a jump server (bastion host).</li>
<li>Yes, it has AWS CLI and other tools pre-installed. Even Python and Node.js.</li>
<li>No, you canâ€™t (well, you can, but should not) use it as an alternative to the day-to-day console on your laptop.</li>
<li>Yes, you can manage all resources from that shell as much as your IAM permissions allow you (even with SSO, which is pretty cool).</li>
<li>No, it does not support Docker.</li>
<li>Yes, you have 1 GB of permanent storage and the ability to transfer files in and out.</li>
</ul>
<h5 id="more-yes-and-nos-here">More Yes and Noâ€™s here:</h5>
<p><a href="https://docs.aws.amazon.com/cloudshell/latest/userguide/faq-list.html">https://docs.aws.amazon.com/cloudshell/latest/userguide/faq-list.html</a></p>
<p><a href="https://aws.amazon.com/cloudshell/faqs/">https://aws.amazon.com/cloudshell/faqs/</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Github Actions - First impression</title>
      <link>https://serhii.vasylenko.info/2020/03/18/github-actions-first-impression.html</link>
      <pubDate>Wed, 18 Mar 2020 00:30:20 +0000</pubDate>
      
      <guid>https://serhii.vasylenko.info/2020/03/18/github-actions-first-impression.html</guid>
      <description>My first meet with github actions... in action.</description>
      <content:encoded><![CDATA[<p>Although Github Actions service is generally available since November 13, 2020, and there are about 243,000,000 results for &ldquo;github actions&rdquo; in Google search already, I have just reached it&hellip;</p>
<p>It&rsquo;s half past midnight, it took me about 35 commits to make my first github automation work, but it finally works and this blog post was built and published automatically!</p>
<h3 id="actions-everywhere">Actions everywhere</h3>
<p>One of the most (or maybe the most one) powerful things in Actions is &hellip; Actions! Github made a simple but genius thing: they turned well-known snippets (we do with pipelines) into the marketplace of well-made (sometimes not) simple and complex applications you can use in your automation workflow. <a href="https://github.com/marketplace?type=actions">https://github.com/marketplace?type=actions</a></p>
<p>So now you can either re-invent your wheel or re-use someone else&rsquo;s code to make the needed automation.</p>
<p>I decided to automate publications to this blog via Actions in order to have some practice.</p>
<p>There are two workflows: one for the blog (website), and one for the CV (cv).</p>
<ul>
<li><a href="https://github.com/actions/checkout">actions/checkout@v2</a></li>
<li><a href="https://github.com/actions/upload-artifact">actions/upload-artifact@v2</a></li>
<li><a href="https://github.com/actions/download-artifact">actions/download-artifact@v2</a></li>
</ul>
<p>In both workflows, the build job is performed within a container, which is different per workflow: Ruby for the blog and Pandoc for CV.</p>
<p>Here is how the build job looks like for the blog:</p>
<div class="highlight"><div style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">21
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-yaml" data-lang="yaml"><span style="color:#6ab825;font-weight:bold">jobs</span>:<span style="color:#666">
</span><span style="color:#666">  </span><span style="color:#6ab825;font-weight:bold">build</span>:<span style="color:#666">
</span><span style="color:#666">    </span><span style="color:#6ab825;font-weight:bold">runs-on</span>:<span style="color:#666"> </span>ubuntu-latest<span style="color:#666">
</span><span style="color:#666">    </span><span style="color:#6ab825;font-weight:bold">container</span>:<span style="color:#666">
</span><span style="color:#666">      </span><span style="color:#6ab825;font-weight:bold">image</span>:<span style="color:#666"> </span>ruby:2.6.4<span style="color:#666">
</span><span style="color:#666">      </span><span style="color:#6ab825;font-weight:bold">options</span>:<span style="color:#666"> 
</span><span style="color:#666">        </span>--workdir /src <span style="color:#666">
</span><span style="color:#666">    </span><span style="color:#6ab825;font-weight:bold">steps</span>:<span style="color:#666">
</span><span style="color:#666">      </span>- <span style="color:#6ab825;font-weight:bold">name</span>:<span style="color:#666"> </span>Checkout<span style="color:#666">
</span><span style="color:#666">        </span><span style="color:#6ab825;font-weight:bold">uses</span>:<span style="color:#666"> </span>actions/checkout@v2 <span style="color:#666">
</span><span style="color:#666">
</span><span style="color:#666">      </span>- <span style="color:#6ab825;font-weight:bold">name</span>:<span style="color:#666"> </span>Build blog<span style="color:#666">
</span><span style="color:#666">        </span><span style="color:#6ab825;font-weight:bold">run</span>:<span style="color:#666"> </span>|<span style="color:#ed9d13">
</span><span style="color:#ed9d13">          bundle install
</span><span style="color:#ed9d13">          bundle exec jekyll build --verbose --destination _site</span><span style="color:#666">          
</span><span style="color:#666">
</span><span style="color:#666">      </span>- <span style="color:#6ab825;font-weight:bold">name</span>:<span style="color:#666"> </span>Upload artifacts<span style="color:#666">
</span><span style="color:#666">        </span><span style="color:#6ab825;font-weight:bold">uses</span>:<span style="color:#666"> </span>actions/upload-artifact@v2<span style="color:#666">
</span><span style="color:#666">        </span><span style="color:#6ab825;font-weight:bold">with</span>:<span style="color:#666"> 
</span><span style="color:#666">          </span><span style="color:#6ab825;font-weight:bold">name</span>:<span style="color:#666"> </span>_site<span style="color:#666">
</span><span style="color:#666">          </span><span style="color:#6ab825;font-weight:bold">path</span>:<span style="color:#666"> </span>_site<span style="color:#666">
</span></code></pre></td></tr></table>
</div>
</div><p>As you can see, I run the steps within the Ruby container. This simplifies things related to file permissions and directory mounting because checkout is made inside the container.</p>
<p>The deploy step is performed via shell run command for now, for better clearness (can be replaced to third-party action or custom-made one): it makes a commit to gh-pages branch which is configured for Github Pages.</p>
<div class="highlight"><div style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#686868">24
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-yaml" data-lang="yaml"><span style="color:#6ab825;font-weight:bold">deploy</span>:<span style="color:#666">
</span><span style="color:#666">    </span><span style="color:#6ab825;font-weight:bold">if</span>:<span style="color:#666"> </span>github.ref == &#39;refs/heads/master&#39;<span style="color:#666">
</span><span style="color:#666">    </span><span style="color:#6ab825;font-weight:bold">needs</span>:<span style="color:#666"> </span>build<span style="color:#666">
</span><span style="color:#666">    </span><span style="color:#6ab825;font-weight:bold">runs-on</span>:<span style="color:#666"> </span>ubuntu-latest<span style="color:#666">
</span><span style="color:#666">    </span><span style="color:#6ab825;font-weight:bold">steps</span>:<span style="color:#666">
</span><span style="color:#666">      </span>- <span style="color:#6ab825;font-weight:bold">name</span>:<span style="color:#666"> </span>Checkout gh-pages branch<span style="color:#666">
</span><span style="color:#666">        </span><span style="color:#6ab825;font-weight:bold">uses</span>:<span style="color:#666"> </span>actions/checkout@v2<span style="color:#666">
</span><span style="color:#666">        </span><span style="color:#6ab825;font-weight:bold">with</span>:<span style="color:#666">
</span><span style="color:#666">          </span><span style="color:#6ab825;font-weight:bold">ref</span>:<span style="color:#666"> </span><span style="color:#ed9d13">&#39;gh-pages&#39;</span><span style="color:#666">
</span><span style="color:#666">
</span><span style="color:#666">      </span>- <span style="color:#6ab825;font-weight:bold">name</span>:<span style="color:#666"> </span>Get the build artifact<span style="color:#666">
</span><span style="color:#666">        </span><span style="color:#6ab825;font-weight:bold">uses</span>:<span style="color:#666"> </span>actions/download-artifact@v2<span style="color:#666">
</span><span style="color:#666">        </span><span style="color:#6ab825;font-weight:bold">with</span>:<span style="color:#666">
</span><span style="color:#666">          </span><span style="color:#6ab825;font-weight:bold">name</span>:<span style="color:#666"> </span>_site<span style="color:#666">
</span><span style="color:#666">          </span><span style="color:#6ab825;font-weight:bold">path</span>:<span style="color:#666"> </span>./<span style="color:#666">
</span><span style="color:#666">
</span><span style="color:#666">      </span>- <span style="color:#6ab825;font-weight:bold">name</span>:<span style="color:#666"> </span>Deploy (push) to gh-pages<span style="color:#666">
</span><span style="color:#666">        </span><span style="color:#6ab825;font-weight:bold">run</span>:<span style="color:#666"> </span>|<span style="color:#ed9d13">
</span><span style="color:#ed9d13">          git config user.name &#34;$GITHUB_ACTOR&#34;
</span><span style="color:#ed9d13">          git config user.email &#34;${GITHUB_ACTOR}@bots.github.com&#34;
</span><span style="color:#ed9d13">          git add -A 
</span><span style="color:#ed9d13">          git commit -a -m &#34;Updated Website&#34;
</span><span style="color:#ed9d13">          git remote set-url origin &#34;https://x-access-token:${{ secrets.DEPLOY_TOKEN }}@github.com/vasylenko/serhii.vasylenko.info.git&#34;
</span><span style="color:#ed9d13">          git push --force-with-lease origin gh-pages</span><span style="color:#666">          
</span></code></pre></td></tr></table>
</div>
</div><p><img loading="lazy" src="2020-03-18-github-actions-first-impression_github-actions-events.png" alt=""  />
</p>
<h3 id="old-good-things-made-better">Old good things made better</h3>
<p>A lot of common things have been introduced to GitHubActions with some sweet additions:</p>
<ul>
<li>you can also specify different environments for your jobs in the same workflow;</li>
<li>you can use environment variables with a different visibility scope: either workflow, or job, or step;</li>
<li>you can use cache for dependencies and reuse it between workflow runs while keeping workflow directory clean;</li>
<li>you can trigger a workflow by repo events and have a quite complex conditional logic or filters (if needed), external webhooks and by a schedule;</li>
<li>you can pass artifacts between jobs inside a workflow with ease - Github provides simple actions for this, so you don&rsquo;t need to dance around temporary directories or files;</li>
<li>and much more</li>
</ul>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
