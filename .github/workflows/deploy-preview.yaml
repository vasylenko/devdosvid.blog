name: Deploy to Preview
on:
  pull_request:

env:
  HUGO_VERSION: 0.111.3
  CONTENT_DIR: publishdir
  CF_PREVIEW_PROJECT_NAME: devdosvid-preview
  DEPLOY_ENV_NAME: Preview
  BASE_BLOG_ADDRESS: "https://devdosvid.blog"

jobs:
  build:
    name: Build the blog
    runs-on: ubuntu-latest
    outputs:
      has_updates: ${{steps.check_updated_posts.outputs.has_updates}}
      blog_post_updates: ${{steps.check_updated_posts.outputs.blog_post_updates}}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Check if we have new or updated blog posts
        id: check_updated_posts
        run: |
          blog_post_updates=$(git diff-tree --no-commit-id --name-only -r ${{ github.event.pull_request.base.sha }}..${{ github.event.after }} | { grep 'content/posts/' || test $? = 1; } | cut -d '/' -f1-4 | uniq )
          if [[ -n $blog_post_updates ]]
          then
            echo "::set-output name=has_updates::true"
            echo "::set-output name=blog_post_updates::$(echo $blog_post_updates)"            
          fi

      - name: Install Hugo
        run: wget -q -c "https://github.com/gohugoio/hugo/releases/download/v${{ env.HUGO_VERSION }}/hugo_${{ env.HUGO_VERSION }}_Linux-64bit.tar.gz" -O - | tar -xz

      - name: Build blog
        run: ./hugo --environment development --baseURL="" --debug --templateMetrics --templateMetricsHints

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.CONTENT_DIR }}
          path: ${{ env.CONTENT_DIR }}
          retention-days: 1

  deploy:
    name: Deploy to Cloudflare Pages
    runs-on: ubuntu-latest
    needs: [build]
    permissions:
      contents: read
      deployments: write
      pull-requests: write
    outputs:
      cf_preview_url: ${{ steps.deploy_to_cloudflare.outputs.url }}
    steps:
      - name: Get the new website content
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.CONTENT_DIR }}
          path: ./${{ env.CONTENT_DIR }}
          retention-days: 1

      - name: Deploy to CloudFlare
        uses: cloudflare/pages-action@1
        id: deploy_to_cloudflare
        with:
          apiToken: ${{ secrets.CLOUDFLARE_GH_PAGES_ACTION_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ${{ env.CF_PREVIEW_PROJECT_NAME }}
          directory: ${{ env.CONTENT_DIR }}
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
