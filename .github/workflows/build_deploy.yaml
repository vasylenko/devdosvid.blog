name: Build and Deploy Blog
on:
  push:
  workflow_dispatch:
env:
  GHPAGES_BRANCH: gh-pages-hugo
  BLOG_URL: devdosvid.blog
jobs:
  build:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Build blog
        run: docker run --rm -v "$(pwd)":/src klakegg/hugo:ci hugo --environment production --gc --minify --debug
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with: 
          name: publishdir
          path: publishdir

  deploy:
    if: github.ref == 'refs/heads/main'
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the branch for website hosting
        uses: actions/checkout@v2
        with:
          ref: '${{ env.GHPAGES_BRANCH }}'

      - name: Get the new website content
        uses: actions/download-artifact@v2
        with:
          name: publishdir
          path: ./

      - name: Deploy website
        run: |
          set -ex

          if [[ -z $(git status --porcelain) ]]; then
            echo "No changes to the site were detected"

          else
            git config user.name "$GITHUB_ACTOR"
            git config user.email "${GITHUB_ACTOR}@bots.github.com"
            git add -A
            git commit -a -m "Website deploy â€” ${GITHUB_RUN_NUMBER}"
            git remote set-url origin "https://x-access-token:${{ secrets.DEPLOY_TOKEN }}@github.com/vasylenko/devdosvid.blog.git"
            git push --force origin ${{ env.GHPAGES_BRANCH }}
           
          fi

  purge-cache:
    needs: [deploy]
    runs-on: ubuntu-latest
    steps:
      - name: Send API request to CloudFlare
        run: |
          set -ex
          curl -s -X POST "https://api.cloudflare.com/client/v4/zones/${{ secrets.CLOUDFLAREZONEID }}/purge_cache" \
                          -H "Authorization: Bearer ${{ secrets.CLOUDFLAREPURGETOKEN }}" \
                          -H "Content-Type: application/json" \
                          --data '{"purge_everything":true}' | jq '.success' 

  seo:
    needs: [deploy]
    runs-on: ubuntu-latest
    steps:
      - name: Ping Google about the new sitemap # https://developers.google.com/search/docs/advanced/sitemaps/build-sitemap#addsitemap
        run: |
          set -ex
          curl -s "https://www.google.com/ping?sitemap=https://${env.BLOG_URL}/sitemap.xml" | grep Received